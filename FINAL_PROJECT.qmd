---
title: "What factors affect unemployment in New York?"
format: html
message: false
warning: false
cache: false
code-fold: TRUE
code-summary: "See the code"
---

In the following section of the project, we will focus on using some of New York's demographics data to find what factors affect unemployment in New York.

To do this, we will gather data from FRED and Census, and attempt to create a regression model which will help us answer the question. Although there are many important characteristics the could impact unemployment, on this project, we focused on demographics. It is important for us to understand the relationship between demographic factors and unemployment in New York given we live in New York, and therefore unemployment here might have an effect on our lives.


# Loading Packages

We will start by loading the necessary packages in `R`.


```{r, include = FALSE, eval = TRUE}

# Install and load necessary libraries

if (!require("tidyverse")) install.packages("tidyverse")
library(tidyverse)

if (!require("dplyr")) install.packages("dplyr")
library(dplyr)

if (!require("ggplot2")) install.packages("ggplot2")
library(ggplot2)

if (!require("stringr")) install.packages("stringr")
library(stringr)

if (!require("DT")) install.packages("DT")
library(DT)

if (!require("httr")) install.packages("httr")
library(httr)

if (!require("jsonlite")) install.packages("jsonlite")
library(jsonlite)

if (!require("readr")) install.packages("readr")
library(readr)

if (!require("sf")) install.packages("sf")
library(sf)

if (!require("gt")) install.packages("gt")
library(gt)

if (!require("knitr")) install.packages("knitr")
library(knitr)

if (!require("gganimate")) install.packages("gganimate")
library(gganimate)

if (!require("httr2")) install.packages("httr2")
library(httr2)

if (!require("lubridate")) install.packages("lubridate")
library(lubridate)

if (!require("tidycensus")) install.packages("tidycensus")
library(tidycensus)

if (!require("fredr")) install.packages("fredr")
library(fredr)

```

Now, I will load my keys to access FRED and Census data through API:

```{r}
fred_key <- readLines("fredr_key", n = 1, ok = TRUE, warn = FALSE)
fredr_set_key(fred_key)
census_key <- readLines("census_key.txt", n = 1)
invisible(census_api_key(census_key, install = TRUE, overwrite = TRUE))
```

# Loading Packages

Now, we start obtaining the data necessary for our analysis.

```{r}
#Unemployment Rate
 
UNRATE <- fredr(
  series_id = "UNRATE",
  observation_start = as.Date("1990-01-01"),
  observation_end = as.Date("2023-12-31"),
  frequency = "m"  # monthly
  )


# New York State Unemployment Rate (Seasonally Adjusted)
ny_unrate <- fredr(
  series_id = "NYUR",
  observation_start = as.Date("2005-01-01"),
  observation_end = as.Date("2019-12-31"),
  frequency = "a"  # monthly
)

```


```{r}

# Employment-Population Ratio: Measures percentage of population employed
# Units:  Percent, Seasonally Adjusted
EMRATIO <- fredr(
  series_id = "EMRATIO",
  observation_start = as.Date("1990-01-01"),
  observation_end = as.Date("2023-12-31"),
  frequency = "m"  # monthly
  )

```



```{r}
#|cache: TRUE

# Population
# Units: Thousands, Not Seasonally Adjusted

POPULATION <- fredr(
  series_id = "POPTHM",
  observation_start = as.Date("1990-01-01"),
  observation_end = as.Date("2023-12-31"),
  frequency = "m"  # monthly
  )

```



```{r}

# Initialize data frame
ny_male_population_df <- data.frame()

# Loop through years
for (year in 2005:2019) {
  # Retrieve data
  male_population <- get_acs(
    geography = "state",
    state = "NY",
    variables = "B03002_002",
    year = year,
    survey = "acs1"
  )
  
  # Check for errors
  if (nrow(male_population) > 0) {
    # Add year column
    male_population$year <- year
    
    # Bind rows to data frame
    ny_male_population_df <- bind_rows(ny_male_population_df, male_population)
  } else {
    print(paste("No data available for", year))
  }
}


```





```{r}
# Initialize data frame
ny_female_population_df <- data.frame()

# Loop through years
for (year in 2005:2019) {
  # Retrieve data
  female_population <- get_acs(
    geography = "state",
    state = "NY",
    variables = "B03002_003",
    year = year,
    survey = "acs1"
  )
  
  # Check for errors
  if (nrow(female_population) > 0) {
    # Add year column
    female_population$year <- year
    
    # Bind rows to data frame
    ny_female_population_df <- bind_rows(ny_female_population_df, female_population)
  } else {
    print(paste("No data available for", year))
  }
}

glimpse(ny_female_population_df)

```



```{r}

# Initialize data frame
ny_white_population_df <- data.frame()

# Loop through years
for (year in 2005:2019) {
  # Retrieve data
  white_population <- get_acs(
    geography = "state",
    state = "NY",
    variables = "B02001_002",
    year = year,
    survey = "acs1"
  )
  
  # Check for errors
  if (nrow(white_population) > 0) {
    # Add year column
    white_population$year <- year
    
    # Bind rows to data frame
    ny_white_population_df <- bind_rows(ny_white_population_df, white_population)
  } else {
    print(paste("No data available for", year))
  }
}

```


```{r}
# Initialize data frame
ny_black_population_df <- data.frame()

# Loop through years
for (year in 2005:2019) {
  # Retrieve data
  black_population <- get_acs(
    geography = "state",
    state = "NY",
    variables = "B02001_002",
    year = year,
    survey = "acs1"
  )
  
  # Check for errors
  if (nrow(black_population) > 0) {
    # Add year column
    black_population$year <- year
    
    # Bind rows to data frame
    ny_black_population_df <- bind_rows(ny_black_population_df, black_population)
  } else {
    print(paste("No data available for", year))
  }
}
```


```{r}
# Initialize data frame
ny_hispanic_population_df <- data.frame()

# Loop through years
for (year in 2005:2019) {
  # Retrieve data
  hispanic_population <- get_acs(
    geography = "state",
    state = "NY",
    variables = "B03001_001",
    year = year,
    survey = "acs1"
  )
  
  # Check for errors
  if (nrow(hispanic_population) > 0) {
    # Add year column
    hispanic_population$year <- year
    
    # Bind rows to data frame
    ny_hispanic_population_df <- bind_rows(ny_hispanic_population_df, hispanic_population)
  } else {
    print(paste("No data available for", year))
  }
}
```


```{r}
# Initialize data frame
ny_black_population_df <- data.frame()

# Loop through years
for (year in 2005:2019) {
  # Retrieve data
  black_population <- get_acs(
    geography = "state",
    state = "NY",
    variables = "B02001_002",
    year = year,
    survey = "acs1"
  )
  
  # Check for errors
  if (nrow(black_population) > 0) {
    # Add year column
    black_population$year <- year
    
    # Bind rows to data frame
    ny_black_population_df <- bind_rows(ny_black_population_df, black_population)
  } else {
    print(paste("No data available for", year))
  }
}
```


```{r}
# Initialize data frame
ny_asian_population_df <- data.frame()

# Loop through years
for (year in 2005:2019) {
  # Retrieve data
  asian_population <- get_acs(
    geography = "state",
    state = "NY",
    variables = "B01001D_001",
    year = year,
    survey = "acs1"
  )
  
  # Check for errors
  if (nrow(asian_population) > 0) {
    # Add year column
    asian_population$year <- year
    
    # Bind rows to data frame
    ny_asian_population_df <- bind_rows(ny_asian_population_df, asian_population)
  } else {
    print(paste("No data available for", year))
  }
}
```


```{r}

# Initialize data frame
less_than_hs_population_df <- data.frame()

# Loop through years
for (year in 2005:2019) {
  # Retrieve data
  less_than_hs_population <- get_acs(
    geography = "state",
    state = "NY",
    variables = "B06009_002",
    year = year,
    survey = "acs1"
  )
  
  # Check for errors
  if (nrow(less_than_hs_population) > 0) {
    # Add year column
    less_than_hs_population$year <- year
    
    # Bind rows to data frame
    less_than_hs_population_df <- bind_rows(less_than_hs_population_df, less_than_hs_population)
  } else {
    print(paste("No data available for", year))
  }
}

```




```{r}

# Initialize data frame
hs_population_df <- data.frame()

# Loop through years
for (year in 2005:2019) {
  # Retrieve data
  hs_population <- get_acs(
    geography = "state",
    state = "NY",
    variables = "B06009_003",
    year = year,
    survey = "acs1"
  )
  
  # Check for errors
  if (nrow(hs_population) > 0) {
    # Add year column
    hs_population$year <- year
    
    # Bind rows to data frame
    hs_population_df <- bind_rows(hs_population_df, hs_population)
  } else {
    print(paste("No data available for", year))
  }
}

```



```{r}

#some college or associates degree
# Initialize data frame
some_college_population_df <- data.frame()

# Loop through years
for (year in 2005:2019) {
  # Retrieve data
  some_college_population <- get_acs(
    geography = "state",
    state = "NY",
    variables = "B06009_004",
    year = year,
    survey = "acs1"
  )
  
  # Check for errors
  if (nrow(some_college_population) > 0) {
    # Add year column
    some_college_population$year <- year
    
    # Bind rows to data frame
    some_college_population_df <- bind_rows(some_college_population_df, some_college_population)
  } else {
    print(paste("No data available for", year))
  }
}

```





```{r}

# Initialize data frame
bachelors_population_df <- data.frame()

# Loop through years
for (year in 2005:2019) {
  # Retrieve data
  bachelors_population <- get_acs(
    geography = "state",
    state = "NY",
    variables = "B06009_005",
    year = year,
    survey = "acs1"
  )
  
  # Check for errors
  if (nrow(bachelors_population) > 0) {
    # Add year column
    bachelors_population$year <- year
    
    # Bind rows to data frame
    bachelors_population_df <- bind_rows(bachelors_population_df, bachelors_population)
  } else {
    print(paste("No data available for", year))
  }
}

```


```{r}

#Graduate or professional degree 
# Initialize data frame

graduate_population_df <- data.frame()

# Loop through years
for (year in 2005:2019) {
  # Retrieve data
  graduate_population <- get_acs(
    geography = "state",
    state = "NY",
    variables = "B06009_005",
    year = year,
    survey = "acs1"
  )
  
  # Check for errors
  if (nrow(graduate_population) > 0) {
    # Add year column
    graduate_population$year <- year
    
    # Bind rows to data frame
    graduate_population_df <- bind_rows(graduate_population_df, graduate_population)
  } else {
    print(paste("No data available for", year))
  }
}


```


# Data Preparation and Analysis

To achieve our goal of finding what factors affect unemployment in New York, with an emphasis on demographics, we will prepare the data obtained for regression analysis. Using regression models, will help us see the effect of each factor on predicting unemployment rate in New York.



```{r}

#Creating a table for the regression model

ny_unrate$year <- as.integer(format(ny_unrate$date, "%Y"))


regression_model_table <- ny_unrate |>
  left_join(ny_female_population_df |>
              select(female_pop = estimate, year), join_by(year == year)) |>
  select(-date)



regression_model_table <- ny_unrate |>
  select(year, unemployment_rate = value) |>
  left_join(ny_female_population_df |>
              select(female_pop = estimate, year), 
            by = "year") |>
  left_join(ny_male_population_df |>
              select(male_pop = estimate, year),
            by = "year") |>
  left_join(less_than_hs_population_df |>
              select(less_than_hs_pop = estimate, year),
            by = "year") |>
  left_join(hs_population_df |>
              select(hs_pop = estimate, year),
            by = "year") |>
  left_join(some_college_population_df |>
              select(some_college_pop = estimate, year),
            by = "year") |>
  left_join(bachelors_population_df |>
              select(bachelors_pop = estimate, year),
            by = "year") |>
  left_join(graduate_population_df |>
              select(graduate_pop = estimate, year),
            by = "year") |>
  left_join(ny_asian_population_df |>
              select(ny_asian_pop = estimate, year),
            by = "year") |>
  left_join(ny_white_population_df |>
              select(ny_white_pop = estimate, year),
            by = "year") |>
  left_join(ny_black_population_df |>
              select(ny_black_pop = estimate, year),
            by = "year") |>
  left_join(ny_hispanic_population_df |>
              select(ny_hispanic_pop = estimate, year),
            by = "year")


```


The following is a regression model using all of the variables we researching:


```{r}
# Build regression model
regression_model <- lm(unemployment_rate ~ 
                        female_pop + 
                        male_pop + 
                        less_than_hs_pop + 
                        hs_pop + 
                        some_college_pop + 
                        bachelors_pop + 
                        graduate_pop + 
                        ny_asian_pop + 
                        ny_white_pop + 
                        ny_black_pop + 
                        ny_hispanic_pop,
                      data = regression_model_table)

# Summarize the model
summary(regression_model)

```


As we can see, there are some demographic factors that do not contribute to the model, such as the number of people with a graduate degree, and the Black race population. Therefore, we will remove those to clean our model:


```{r}
# Build regression model
regression_model <- lm(unemployment_rate ~ 
                        female_pop + 
                        male_pop + 
                        less_than_hs_pop + 
                        hs_pop + 
                        some_college_pop + 
                        bachelors_pop + 
                        
                        ny_asian_pop + 
                        ny_white_pop + 
                        
                        ny_hispanic_pop,
                      data = regression_model_table)

# Summarize the model
summary(regression_model)


```

From the model obtained, we can highlight the high R- squared value (0.96) which indicates that 96% of the variability in New York's unemployment rate can be explained by the variables selected using our model. Furthermore, we can see some of the predictors such as population with a high school degree, population with some college education, and Hispanic population, have a low p value. This indicates these factors are significant in our model. Given education encompasses a diverse set of racial and gender populations, we can deduce education is one of the most important factors related to unemployment in New York.

Furthermore, it makes sense that education is an important factor related to unemployment in New York, given that the more education an individual has, the more opportunities that individual might have given some jobs require certain levels of education.



Now, let us visually inspect the performance of our model:


```{r}
predicted_values <- predict(regression_model)
actual_values <- regression_model_table$unemployment_rate
df <- data.frame(predicted = predicted_values, actual = actual_values)
ggplot(df, aes(x = predicted, y = actual)) +
  geom_point() +
  geom_abline(intercept = 0, slope = 1, color = "red") +
  labs(title = "Predicted vs Actual Unemployment Rates") +
  theme_classic()

```

From this graph, we can see that the unemployment rate predicted by our model aligns with the actual unemployment rate seen in our data. Furthermore, the following scatter plot showing residuals vs fitted values show that the variation is relatively small, and that the model is not violating linear regression assumptions such as linearity and constant variance.


```{r}

# Create data frame with residuals and fitted values
residuals_df <- data.frame(
  Fitted = fitted(regression_model),
  Residuals = residuals(regression_model)
)

# Plot
ggplot(residuals_df, aes(x = Fitted, y = Residuals)) +
  geom_point() +
  geom_hline(yintercept = 0, color = "red") +
  labs(title = "Residuals vs Fitted Values",
       subtitle = "Linear Regression Model",
       x = "Fitted Values",
       y = "Residuals") +
  theme_classic()


```

Now, that we have established the validity of our model, we would illustrate how it can be used. The following data, can be used to estimate the unemployment rate of an area of New York with the following demographic split of the population:


```{r}
# Create new data frame with input values
new_data <- data.frame(
  female_pop = 11227534,
  male_pop = 16037745,
  less_than_hs_pop = 1954719,
  hs_pop = 3615023,
  some_college_pop = 3276724,
  bachelors_pop = 2531374,
  graduate_pop = 2531374,
  ny_asian_pop = 1498346,
  ny_white_pop = 12695280,
  ny_black_pop = 12695280,
  ny_hispanic_pop = 19541453
)


# Rename columns for clarity
colnames(new_data) <- c(
  "Female",
  "Male",
  "Less Than High School",
  "High School",
  "Some College",
  "Bachelor's",
  "Graduate",
  "Asian",
  "White",
  "Black",
  "Hispanic"
)

# Pivot the data to horizontal format
new_data_horizontal <- new_data %>% 
  pivot_longer(
    cols = everything(),
    names_to = "Category",
    values_to = "Population"
  )

# Format numbers with commas
new_data_horizontal$Population <- format(as.numeric(gsub(",", "", new_data_horizontal$Population)), big.mark = ",")

# Display as a datatable
datatable(new_data_horizontal, 
          options = list(
            pageLength = 11, 
            lengthChange = FALSE
          )
)


```
After we input these variables in our model, we get an estimated unemployment rate of 5.83%.

```{r}

# Variables can be changed to get a new prediction
new_data <- data.frame(
  female_pop = 11227534,
  male_pop = 16037745,
  less_than_hs_pop = 1954719,
  hs_pop = 3615023,
  some_college_pop = 3276724,
  bachelors_pop = 2531374,
  graduate_pop = 2531374,
  ny_asian_pop = 1498346,
  ny_white_pop = 12695280,
  ny_black_pop = 12695280,
  ny_hispanic_pop = 19541453
)

# Use the model to predict unemployment rate
predicted_unemployment_rate <- predict(regression_model, new_data)

# Print the predicted value
print(predicted_unemployment_rate)
```

# Conclusion
Our initial objective was to find out what factors affect unemployment in New York. After obtaining data from FRED and Census, we created a regression model that helped us identify important factors related to unemployment in New York, the most important of which we concluded to be education based on statistical data found on out model. 

Education is important because it can allow individuals to access job opportunities that require a certain level of education to apply. Furthermore, it is something that can be changed for almost any individual regardless of other factors such as age and gender. 

It is important to note, that there are many factors that could impact unemployment. On this project, however, we focused on demographics because given the diversity existing in New York, we though it would interesting to explore.

Going forward, it would be interesting to continue exploring this question with a bigger scope than demographic. For example, we might look to continue expanding our model to include other variables such as income and occupation, and removing variables that might not be as significant.




